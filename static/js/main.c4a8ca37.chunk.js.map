{"version":3,"sources":["components/documentation/DocumentComponent.js","components/generic/Loading.js","components/generic/DisplayRounds.js","components/generic/DisplayTime.js","components/generic/Input.js","components/generic/PlayButton.js","components/generic/PauseButton.js","components/generic/ResetButton.js","views/DocumentationView.js","Context/TimerProvider.js","components/timers/Stopwatch.js","components/timers/Countdown.js","views/TimersView.js","App.js","index.js"],"names":["Wrapper","styled","div","Container","Title","RenderComponent","Documentation","table","DocumentComponent","this","props","title","component","propDocs","map","doc","prop","description","type","defaultValue","React","Component","sizeMapping","small","medium","large","Dot","span","size","color","DotGroup","Loading","defaultProps","Text","h1","DisplayRounds","text","DisplayTime","time","Math","floor","slice","StyledInput","input","Input","Button","button","height","width","PlayButton","onClick","handleStart","PauseButton","handlePauseResume","isPaused","ResetButton","handleReset","TimerContext","createContext","TimerProvider","children","useState","isActive","setIsActive","setIsPaused","setTime","startTime","setStartTime","stopTime","setStopTime","Provider","value","Stopwatch","useContext","useEffect","interval","setInterval","clearInterval","active","Timers","Timer","TimerTitle","App","timers","C","Countdown","timer","to","path","DocumentationView","TimersView","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4a8ca37.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  border: 1px solid #121212;\n  margin: 20px 0px;\n`;\n\nconst Container = styled.div`\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 20px;\n  font-size: 1.3rem;\n`;\n\nconst RenderComponent = styled.div`\n  padding: 25px;\n  display: flex;\n  align-items: center;\n`;\n\nconst Documentation = styled.table``;\n\nclass DocumentComponent extends React.Component {\n  render() {\n    return (\n      <Wrapper>\n        <Title>{this.props.title}</Title>\n        <Container>\n          <RenderComponent>{this.props.component}</RenderComponent>\n          <Documentation>\n            <tr>\n              <th>Prop</th>\n              <th>Description</th>\n              <th>Type</th>\n              <th>Default value</th>\n            </tr>\n            {this.props.propDocs.map((doc) => {\n              return (\n                <tr>\n                  <td>{doc.prop}</td>\n                  <td>{doc.description}</td>\n                  <td>{doc.type}</td>\n                  <td>\n                    <code>{doc.defaultValue}</code>\n                  </td>\n                </tr>\n              );\n            })}\n          </Documentation>\n        </Container>\n      </Wrapper>\n    );\n  }\n}\n\nexport default DocumentComponent;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst primaryColor = \"#ffa2bf\";\n\nconst sizeMapping = {\n  small: 10,\n  medium: 14,\n  large: 20,\n};\n\nconst Container = styled.div`\n  animation: spin 1.5s linear infinite;\n\n  @-moz-keyframes spin {\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst Dot = styled.span`\n  display: block;\n  width: ${(props) => props.size}px;\n  height: ${(props) => props.size}px;\n  background-color: ${(props) => props.color};\n  border-radius: 100%;\n  transform: scale(0.75);\n  transform-origin: 50% 50%;\n  opacity: 0.3;\n  animation: wobble 1s ease-in-out infinite;\n\n  @keyframes wobble {\n    0% {\n      border-radius: 25%;\n    }\n    100% {\n      border-radius: 100%;\n    }\n  }\n`;\n\nconst DotGroup = styled.div`\n  display: flex;\n`;\n\nclass Loading extends React.Component {\n  render() {\n    const size = sizeMapping[this.props.size];\n    const { color } = this.props;\n\n    return (\n      <Container>\n        <DotGroup>\n          <Dot size={size} color={color} />\n          <Dot size={size} color={color} />\n        </DotGroup>\n        <DotGroup>\n          <Dot size={size} color={color} />\n          <Dot size={size} color={color} />\n        </DotGroup>\n      </Container>\n    );\n  }\n}\n\nLoading.propTypes = {\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  color: PropTypes.string,\n};\n\nLoading.defaultProps = {\n  size: \"medium\",\n  color: primaryColor,\n};\n\nexport default Loading;\n","import React from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Text = styled.h1`\n  color: #edf2f4;\n  font-family: \"Lato\", sans-serif;\n  font-weight: 800;\n  font-size: 3rem;\n  align-items: center;\n  margin: 1px;\n`;\n\nfunction DisplayRounds(props) {\n  return <Text>{props.text}</Text>;\n}\n\nDisplayRounds.propTypes = {\n  text: PropTypes.string,\n};\n\nexport default DisplayRounds;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 200px;\n  height: 200px;\n  border-radius: 200px;\n  background-color: rgba(0, 0, 0, 0.1);\n  border: 4px solid #edf2f4;\n  font-size: 2.5rem;\n  color: #eeee;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: auto;\n`;\n\nfunction DisplayTime({ time }) {\n  return (\n    <Container>\n      <span>{(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}:</span>\n      <span>{(\"0\" + Math.floor((time / 1000) % 60)).slice(-2)}.</span>\n      <span>{(\"0\" + ((time / 10) % 100)).slice(-2)}</span>\n    </Container>\n  );\n}\n\nDisplayTime.propTypes = {\n  time: PropTypes.number,\n};\n\nexport default DisplayTime;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledInput = styled.input`\n  width: 75px;\n  height: 25px;\n  padding: 10px;\n  margin: 10px;\n  border: 2px solid #ef233c;\n  border-radius: 5px;\n  font-size: 40px;\n`;\n\nfunction Input(props) {\n  return <StyledInput {...props} />;\n}\n\nexport default Input;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst Button = styled.button`\n  font-weight: 100;\n  background-color: #1d3557;\n  height: ${(props) => props.height};\n  width: ${(props) => props.width};\n  font-size: 1.25em;\n  color: #edf2f4;\n  line-height: 100px;\n  padding: 5px 15px;\n  border-radius: 100px;\n  border: 2px solid #edf2f4;\n  outline: 0;\n  text-transform: uppercase;\n  text-align: center;\n  margin: 10px;\n  cursor: pointer;\n  transition: ease background-color 100ms;\n  &:hover {\n    background-color: #1e4670;\n  }\n  &:disabled {\n    cursor: default;\n    opacity: 0.7;\n  }\n`;\n\nButton.defaultProps = {\n  height: \"125px\",\n  width: \"125px\",\n};\n\nfunction PlayButton(props) {\n  return <Button onClick={props.handleStart}>PLAY</Button>;\n}\n\nPlayButton.propTypes = {\n  size: PropTypes.string,\n  onClick: PropTypes.func,\n  active: PropTypes.bool,\n  handleStart: PropTypes.func,\n  handlePauseResume: PropTypes.func,\n};\n\nexport default PlayButton;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst Button = styled.button`\n  font-weight: 100;\n  background-color: #e63946;\n  height: ${(props) => props.height};\n  width: ${(props) => props.width};\n  font-size: 1.25em;\n  color: #edf2f4;\n  line-height: 100px;\n  padding: 5px 15px;\n  border-radius: 100px;\n  border: 2px solid #edf2f4;\n  outline: 0;\n  text-transform: uppercase;\n  text-align: center;\n  margin: 10px;\n  cursor: pointer;\n  transition: ease background-color 100ms;\n  &:hover {\n    background-color: #d52835;\n  }\n  &:disabled {\n    cursor: default;\n    opacity: 0.7;\n  }\n`;\n\nButton.defaultProps = {\n  height: \"125px\",\n  width: \"125px\",\n};\n\nfunction PauseButton(props) {\n  return (\n    <Button onClick={props.handlePauseResume}>\n      {props.isPaused ? \"Resume\" : \"Pause\"}\n    </Button>\n  );\n}\n\nPauseButton.propTypes = {\n  onClick: PropTypes.func,\n  active: PropTypes.bool,\n  handleStart: PropTypes.func,\n  handlePauseResume: PropTypes.func,\n};\n\nexport default PauseButton;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst Button = styled.button`\n  font-weight: 100;\n  background-color: #1d3557;\n  height: ${(props) => props.height};\n  width: ${(props) => props.width};\n  font-size: 1.25em;\n  color: #edf2f4;\n  line-height: 100px;\n  padding: 5px 15px;\n  border-radius: 100px;\n  border: 2px solid #edf2f4;\n  outline: 0;\n  text-transform: uppercase;\n  text-align: center;\n  margin: 10px;\n  cursor: pointer;\n  transition: ease background-color 100ms;\n  &:hover {\n    background-color: #1e4670;\n  }\n  &:disabled {\n    cursor: default;\n    opacity: 0.7;\n  }\n`;\n\nButton.defaultProps = {\n  height: \"125px\",\n  width: \"125px\",\n};\n\nfunction ResetButton(props) {\n  return <Button onClick={props.handleReset}>RESET</Button>;\n}\n\nResetButton.propTypes = {\n  onClick: PropTypes.func,\n  active: PropTypes.bool,\n  handleReset: PropTypes.func,\n};\n\nexport default ResetButton;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport DocumentComponent from \"../components/documentation/DocumentComponent\";\n\nimport Loading from \"../components/generic/Loading\";\nimport DisplayRounds from \"../components/generic/DisplayRounds\";\nimport DisplayTime from \"../components/generic/DisplayTime\";\nimport Input from \"../components/generic/Input\";\nimport PlayButton from \"../components/generic/PlayButton\";\nimport PauseButton from \"../components/generic/PauseButton\";\nimport ResetButton from \"../components/generic/ResetButton\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nconst Title = styled.div`\n  font-size: 2rem;\n`;\n\nclass Documentation extends React.Component {\n  render() {\n    return (\n      <Container>\n        <h2>DOCUMENTATION GOES HERE</h2>\n        <div>\n          <Title>Documentation</Title>\n          <DocumentComponent\n            title=\"Loading spinner \"\n            component={<Loading />}\n            propDocs={[\n              {\n                prop: \"size\",\n                description: \"Changes the size of the loading spinner\",\n                type: \"string\",\n                defaultValue: \"medium\",\n              },\n            ]}\n          />\n          <DocumentComponent\n            title=\"Play button \"\n            component={<PlayButton />}\n            propDocs={[\n              {\n                prop: \"onClick\",\n                description: \"runs a function on click\",\n                type: \"func\",\n              },\n              {\n                prop: \"active\",\n                description: \"bool for conditional rendering\",\n                type: \"bool\",\n              },\n              {\n                prop: \"handleStart\",\n                description:\n                  \"runs a function to handle what happens when the timer starts\",\n                type: \"func\",\n              },\n              {\n                prop: \"handlePauseResume\",\n                description: \"handler for pause/resume of the timer\",\n                type: \"func\",\n              },\n            ]}\n          />\n          <DocumentComponent\n            title=\"Pause button \"\n            component={<PauseButton />}\n            propDocs={[\n              {\n                prop: \"onClick\",\n                description: \"runs a function on click\",\n                type: \"func\",\n              },\n              {\n                prop: \"active\",\n                description: \"bool for conditional rendering\",\n                type: \"bool\",\n              },\n              {\n                prop: \"handleStart\",\n                description:\n                  \"runs a function to handle what happens when the timer starts\",\n                type: \"func\",\n              },\n              {\n                prop: \"handlePauseResume\",\n                description: \"handler for pause/resume of the timer\",\n                type: \"func\",\n              },\n            ]}\n          />\n          <DocumentComponent\n            title=\"Reset button \"\n            component={<ResetButton />}\n            propDocs={[\n              {\n                prop: \"onClick\",\n                description: \"runs a function on click\",\n                type: \"func\",\n              },\n              {\n                prop: \"active\",\n                description: \"bool for conditional rendering\",\n                type: \"bool\",\n              },\n\n              {\n                prop: \"handleReset\",\n                description: \"handler to reset timer state\",\n                type: \"func\",\n              },\n            ]}\n          />\n\n          <DocumentComponent\n            title=\"Display Rounds \"\n            component={<DisplayRounds />}\n            propDocs={[\n              {\n                prop: \"value\",\n                description: \"Changes the number\",\n                type: \"int\",\n                defaultValue: 0,\n              },\n            ]}\n          />\n          <DocumentComponent\n            title=\"Display time \"\n            component={<DisplayTime />}\n            propDocs={[\n              {\n                prop: \"value\",\n                description: \"Changes the number\",\n                type: \"int\",\n              },\n            ]}\n          />\n          <DocumentComponent\n            title=\"Input \"\n            component={<Input />}\n            propDocs={[\n              {\n                prop: \"null\",\n              },\n            ]}\n          />\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default Documentation;\n","import React, { createContext, useState } from \"react\";\n\nexport const TimerContext = createContext();\n\nconst TimerProvider = ({ children }) => {\n  const [isActive, setIsActive] = useState(false);\n  const [isPaused, setIsPaused] = useState(true);\n  const [time, setTime] = useState(0);\n  const [startTime, setStartTime] = useState(10000);\n  const [stopTime, setStopTime] = useState(10000);\n\n  return (\n    <TimerContext.Provider\n      value={{\n        isActive,\n        setIsActive,\n        isPaused,\n        setIsPaused,\n        time,\n        setTime,\n        startTime,\n        setStartTime,\n        stopTime,\n        setStopTime,\n      }}\n    >\n      {children}\n    </TimerContext.Provider>\n  );\n};\n\nexport default TimerProvider;\n","import { React, useEffect, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport DisplayTime from \"../generic/DisplayTime\";\n// import Input from \"../generic/Input\";\nimport PlayButton from \"../generic/PlayButton\";\nimport PauseButton from \"../generic/PauseButton\";\nimport ResetButton from \"../generic/ResetButton\";\nimport { TimerContext } from \"../../Context/TimerProvider\";\n\nconst Container = styled.div`\n  height: 40vh;\n  width: 40vw;\n  border: none;\n  background: #8d99ae;\n  padding: 20px;\n  text-align: center;\n  border-radius: 25px;\n`;\n\nconst Stopwatch = (props) => {\n  const {\n    isActive,\n    setIsActive,\n    isPaused,\n    setIsPaused,\n    time,\n    setTime,\n    stopTime,\n    // setStopTime,\n  } = useContext(TimerContext);\n\n  useEffect(() => {\n    let interval = null;\n\n    if (time < stopTime && isActive && isPaused === false) {\n      interval = setInterval(() => {\n        setTime((time) => time + 10);\n      }, 10);\n    } else {\n      clearInterval(interval);\n    }\n    return () => {\n      clearInterval(interval);\n    };\n  }, [isActive, isPaused, stopTime, time, setTime]);\n\n  const handleStart = () => {\n    setIsActive(true);\n    setIsPaused(false);\n  };\n\n  const handlePauseResume = () => {\n    setIsPaused(!isPaused);\n  };\n\n  const handleReset = () => {\n    setIsActive(false);\n    setTime(0);\n  };\n  return (\n    <Container>\n      <DisplayTime time={time} />\n      <div>\n        {/* <label>End Time</label> */}\n        {/* <Input /> */}\n      </div>\n      {isActive ? (\n        <div>\n          <PauseButton\n            active={isActive}\n            isPaused={isPaused}\n            handleStart={handleStart}\n            handlePauseResume={handlePauseResume}\n          />\n          <ResetButton\n            active={isActive}\n            isPaused={isPaused}\n            handleReset={handleReset}\n          />\n        </div>\n      ) : (\n        <PlayButton\n          active={isActive}\n          isPaused={isPaused}\n          handleStart={handleStart}\n          handlePauseResume={handlePauseResume}\n        />\n      )}\n    </Container>\n  );\n};\n\nexport default Stopwatch;\n\n// import { React, useState, useEffect, useRef } from \"react\";\n// import styled from \"styled-components\";\n// import DisplayTime from \"../generic/DisplayTime\";\n// import Input from \"../generic/Input\";\n// import PlayButton from \"../generic/PlayButton\";\n// import PauseButton from \"../generic/PauseButton\";\n\n// const Container = styled.div`\n//   height: 90%;\n//   width: 100%;\n//   border: none;\n//   background: #8d99ae;\n//   padding: 20px;\n//   text-align: center;\n// `;\n\n// const Stopwatch = (props) => {\n//   const [isActive, setIsActive] = useState(false);\n//   const [isPaused, setIsPaused] = useState(true);\n//   const [time, setTime] = useState(0);\n\n//   useEffect(() => {\n//     let interval = null;\n\n//     if (isActive && isPaused === false) {\n//       interval = setInterval(() => {\n//         setTime((time) => time + 10);\n//       }, 10);\n//     } else {\n//       clearInterval(interval);\n//     }\n//     return () => {\n//       clearInterval(interval);\n//     };\n//   }, [isActive, isPaused]);\n\n//   const handleStart = () => {\n//     setIsActive(true);\n//     setIsPaused(false);\n//   };\n\n//   const handlePauseResume = () => {\n//     setIsPaused(!isPaused);\n//   };\n\n//   const handleReset = () => {\n//     setIsActive(false);\n//     setTime(0);\n//   };\n//   return (\n//     <Container>\n//       <DisplayTime time={time} />\n//       <div>\n//         <Input />\n//       </div>\n//       {isActive ? (\n//         <PauseButton\n//           active={isActive}\n//           isPaused={isPaused}\n//           handleStart={handleStart}\n//           handlePauseResume={handlePauseResume}\n//           handleReset={handleReset}\n//         />\n//       ) : (\n//         <PlayButton\n//           active={isActive}\n//           isPaused={isPaused}\n//           handleStart={handleStart}\n//           handlePauseResume={handlePauseResume}\n//           handleReset={handleReset}\n//         />\n//       )}\n//     </Container>\n//   );\n// };\n\n// export default Stopwatch;\n","import { React, useEffect, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport DisplayTime from \"../generic/DisplayTime\";\n// import Input from \"../generic/Input\";\nimport PlayButton from \"../generic/PlayButton\";\nimport PauseButton from \"../generic/PauseButton\";\nimport ResetButton from \"../generic/ResetButton\";\nimport { TimerContext } from \"../../Context/TimerProvider\";\n\nconst Container = styled.div`\n  height: 40vh;\n  width: 40vw;\n  border: none;\n  background: #8d99ae;\n  padding: 20px;\n  text-align: center;\n  border-radius: 25px;\n`;\n\nconst Stopwatch = (props) => {\n  const {\n    isActive,\n    setIsActive,\n    isPaused,\n    setIsPaused,\n    time,\n    setTime,\n    startTime,\n    // setStartTime,\n  } = useContext(TimerContext);\n\n  useEffect(() => {\n    let interval = null;\n\n    if (time > 0 && isActive && isPaused === false) {\n      interval = setInterval(() => {\n        setTime((time) => time - 10);\n      }, 10);\n    } else {\n      clearInterval(interval);\n    }\n    return () => {\n      clearInterval(interval);\n    };\n  }, [isActive, isPaused, time, setTime]);\n\n  const handleStart = () => {\n    setIsActive(true);\n    setIsPaused(false);\n  };\n\n  const handlePauseResume = () => {\n    setIsPaused(!isPaused);\n  };\n\n  const handleReset = () => {\n    setIsActive(false);\n    setTime(startTime);\n  };\n\n  // function handleChange(event) {\n  //   console.log(event.target.value);\n  // }\n  return (\n    <Container>\n      <DisplayTime time={time} />\n      <div>\n        {/* <label>Duration</label> */}\n        {/* <Input\n          onChange={(event) => {\n            setStartTime(event.target.value);\n          }}\n        /> */}\n      </div>\n      {isActive ? (\n        <div>\n          <PauseButton\n            active={isActive}\n            isPaused={isPaused}\n            handleStart={handleStart}\n            handlePauseResume={handlePauseResume}\n          />\n          <ResetButton\n            active={isActive}\n            isPaused={isPaused}\n            handleReset={handleReset}\n          />\n        </div>\n      ) : (\n        <PlayButton\n          active={isActive}\n          isPaused={isPaused}\n          handleStart={handleStart}\n          handlePauseResume={handlePauseResume}\n        />\n      )}\n    </Container>\n  );\n};\n\nexport default Stopwatch;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Stopwatch from \"../components/timers/Stopwatch\";\nimport Countdown from \"../components/timers/Countdown\";\n// import XY from \"../components/timers/XY\";\n// import Tabata from \"../components/timers/Tabata\";\n\nconst Timers = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Timer = styled.div`\n  /* border: 1px solid gray;\n  padding: 20px;\n  margin: 10px;\n  font-size: 1.5rem; */\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst TimerTitle = styled.div``;\n\nfunction App() {\n  const timers = [\n    { title: \"Stopwatch\", C: <Stopwatch /> },\n    { title: \"Countdown\", C: <Countdown /> },\n    // { title: \"XY\", C: <XY /> },\n    // { title: \"Tabata\", C: <Tabata /> },\n  ];\n\n  return (\n    <Timers>\n      {timers.map((timer) => (\n        <Timer>\n          <TimerTitle>{timer.title}</TimerTitle>\n          {timer.C}\n        </Timer>\n      ))}\n    </Timers>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport DocumentationView from \"./views/DocumentationView\";\nimport TimersView from \"./views/TimersView\";\nimport TimerProvider from \"./Context/TimerProvider\";\n// import AddTimersView from \"./views/AddTimersView\";\n\nconst Container = styled.div`\n  background: #f0f6fb;\n  height: 100vh;\n  overflow: auto;\n`;\n\nfunction App() {\n  return (\n    <Container>\n      <Router>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Timers</Link>\n            </li>\n            <li>\n              <Link to=\"/docs\">Documentation</Link>\n            </li>\n            <li>\n              <Link to=\"/docs\">Documentation</Link>\n            </li>\n          </ul>\n        </nav>\n        <Switch>\n          <Route path=\"/docs\">\n            <DocumentationView />\n          </Route>\n          <Route path=\"/\">\n            <TimerProvider>\n              <TimersView />\n            </TimerProvider>\n          </Route>\n        </Switch>\n      </Router>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}